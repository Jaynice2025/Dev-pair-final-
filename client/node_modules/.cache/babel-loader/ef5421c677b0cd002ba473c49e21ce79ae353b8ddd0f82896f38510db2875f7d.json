{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/lenovo/Development2/Dev-pair(final)/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\n// Configure axios defaults\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem(\"access_token\");\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      fetchCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    // Apply dark mode class to body\n    if (darkMode) {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }, [darkMode]);\n  const fetchCurrentUser = async () => {\n    try {\n      const response = await axios.get(\"/api/auth/me\");\n      setUser(response.data);\n      setDarkMode(response.data.dark_mode || false);\n    } catch (error) {\n      console.error(\"Error fetching current user:\", error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        username,\n        password\n      });\n      const {\n        access_token,\n        refresh_token,\n        user: userData\n      } = response.data;\n      localStorage.setItem(\"access_token\", access_token);\n      localStorage.setItem(\"refresh_token\", refresh_token);\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`;\n      setUser(userData);\n      setDarkMode(userData.dark_mode || false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Login failed\"\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post(\"/api/auth/register\", userData);\n      const {\n        access_token,\n        refresh_token,\n        user: newUser\n      } = response.data;\n      localStorage.setItem(\"access_token\", access_token);\n      localStorage.setItem(\"refresh_token\", refresh_token);\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`;\n      setUser(newUser);\n      setDarkMode(newUser.dark_mode || false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Registration failed\"\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post(\"/api/auth/logout\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n      delete axios.defaults.headers.common[\"Authorization\"];\n      setUser(null);\n      setDarkMode(false);\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put(\"/api/users/me\", profileData);\n      setUser(response.data);\n      setDarkMode(response.data.dark_mode || false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || \"Profile update failed\"\n      };\n    }\n  };\n  const toggleDarkMode = async () => {\n    const newDarkMode = !darkMode;\n    try {\n      await axios.put(\"/api/users/me\", {\n        dark_mode: newDarkMode\n      });\n      setDarkMode(newDarkMode);\n      setUser(prev => ({\n        ...prev,\n        dark_mode: newDarkMode\n      }));\n    } catch (error) {\n      console.error(\"Error updating dark mode:\", error);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    darkMode,\n    login,\n    register,\n    logout,\n    updateProfile,\n    toggleDarkMode\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"Wlo3q9k6X5Oe85Aynbn4FAlINQY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","context","Error","defaults","baseURL","process","env","REACT_APP_API_URL","AuthProvider","children","user","setUser","loading","setLoading","darkMode","setDarkMode","token","localStorage","getItem","headers","common","fetchCurrentUser","document","body","classList","add","remove","response","get","data","dark_mode","error","console","logout","login","username","password","post","access_token","refresh_token","userData","setItem","success","_error$response","_error$response$data","register","newUser","_error$response2","_error$response2$data","removeItem","updateProfile","profileData","put","_error$response3","_error$response3$data","toggleDarkMode","newDarkMode","prev","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lenovo/Development2/Dev-pair(final)/client/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\n// Configure axios defaults\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || \"http://localhost:5000\"\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [darkMode, setDarkMode] = useState(false)\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"access_token\")\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n      fetchCurrentUser()\n    } else {\n      setLoading(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    // Apply dark mode class to body\n    if (darkMode) {\n      document.body.classList.add(\"dark-mode\")\n    } else {\n      document.body.classList.remove(\"dark-mode\")\n    }\n  }, [darkMode])\n\n  const fetchCurrentUser = async () => {\n    try {\n      const response = await axios.get(\"/api/auth/me\")\n      setUser(response.data)\n      setDarkMode(response.data.dark_mode || false)\n    } catch (error) {\n      console.error(\"Error fetching current user:\", error)\n      logout()\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        username,\n        password,\n      })\n\n      const { access_token, refresh_token, user: userData } = response.data\n\n      localStorage.setItem(\"access_token\", access_token)\n      localStorage.setItem(\"refresh_token\", refresh_token)\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`\n\n      setUser(userData)\n      setDarkMode(userData.dark_mode || false)\n\n      return { success: true }\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || \"Login failed\",\n      }\n    }\n  }\n\n  const register = async (userData) => {\n    try {\n      const response = await axios.post(\"/api/auth/register\", userData)\n\n      const { access_token, refresh_token, user: newUser } = response.data\n\n      localStorage.setItem(\"access_token\", access_token)\n      localStorage.setItem(\"refresh_token\", refresh_token)\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${access_token}`\n\n      setUser(newUser)\n      setDarkMode(newUser.dark_mode || false)\n\n      return { success: true }\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || \"Registration failed\",\n      }\n    }\n  }\n\n  const logout = async () => {\n    try {\n      await axios.post(\"/api/auth/logout\")\n    } catch (error) {\n      console.error(\"Logout error:\", error)\n    } finally {\n      localStorage.removeItem(\"access_token\")\n      localStorage.removeItem(\"refresh_token\")\n      delete axios.defaults.headers.common[\"Authorization\"]\n      setUser(null)\n      setDarkMode(false)\n    }\n  }\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await axios.put(\"/api/users/me\", profileData)\n      setUser(response.data)\n      setDarkMode(response.data.dark_mode || false)\n      return { success: true }\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || \"Profile update failed\",\n      }\n    }\n  }\n\n  const toggleDarkMode = async () => {\n    const newDarkMode = !darkMode\n    try {\n      await axios.put(\"/api/users/me\", { dark_mode: newDarkMode })\n      setDarkMode(newDarkMode)\n      setUser((prev) => ({ ...prev, dark_mode: newDarkMode }))\n    } catch (error) {\n      console.error(\"Error updating dark mode:\", error)\n    }\n  }\n\n  const value = {\n    user,\n    loading,\n    darkMode,\n    login,\n    register,\n    logout,\n    updateProfile,\n    toggleDarkMode,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}